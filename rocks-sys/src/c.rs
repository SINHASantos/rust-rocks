/* automatically generated by rust-bindgen */

pub const __GNUC_VA_LIST: ::std::os::raw::c_uint = 1;
pub const __WORDSIZE: ::std::os::raw::c_uint = 64;
pub const __DARWIN_ONLY_64_BIT_INO_T: ::std::os::raw::c_uint = 0;
pub const __DARWIN_ONLY_VERS_1050: ::std::os::raw::c_uint = 0;
pub const __DARWIN_ONLY_UNIX_CONFORMANCE: ::std::os::raw::c_uint = 1;
pub const __DARWIN_UNIX03: ::std::os::raw::c_uint = 1;
pub const __DARWIN_64_BIT_INO_T: ::std::os::raw::c_uint = 1;
pub const __DARWIN_VERS_1050: ::std::os::raw::c_uint = 1;
pub const __DARWIN_NON_CANCELABLE: ::std::os::raw::c_uint = 0;
pub const __DARWIN_SUF_64_BIT_INO_T: &'static [u8; 9usize] = b"$INODE64\x00";
pub const __DARWIN_SUF_1050: &'static [u8; 6usize] = b"$1050\x00";
pub const __DARWIN_SUF_EXTSN: &'static [u8; 14usize] = b"$DARWIN_EXTSN\x00";
pub const __DARWIN_C_ANSI: ::std::os::raw::c_uint = 4096;
pub const __DARWIN_C_FULL: ::std::os::raw::c_uint = 900000;
pub const __DARWIN_C_LEVEL: ::std::os::raw::c_uint = 900000;
pub const __STDC_WANT_LIB_EXT1__: ::std::os::raw::c_uint = 1;
pub const _DARWIN_FEATURE_64_BIT_INODE: ::std::os::raw::c_uint = 1;
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: ::std::os::raw::c_uint = 1;
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE: ::std::os::raw::c_uint = 3;
pub const __PTHREAD_SIZE__: ::std::os::raw::c_uint = 8176;
pub const __PTHREAD_ATTR_SIZE__: ::std::os::raw::c_uint = 56;
pub const __PTHREAD_MUTEXATTR_SIZE__: ::std::os::raw::c_uint = 8;
pub const __PTHREAD_MUTEX_SIZE__: ::std::os::raw::c_uint = 56;
pub const __PTHREAD_CONDATTR_SIZE__: ::std::os::raw::c_uint = 8;
pub const __PTHREAD_COND_SIZE__: ::std::os::raw::c_uint = 40;
pub const __PTHREAD_ONCE_SIZE__: ::std::os::raw::c_uint = 8;
pub const __PTHREAD_RWLOCK_SIZE__: ::std::os::raw::c_uint = 192;
pub const __PTHREAD_RWLOCKATTR_SIZE__: ::std::os::raw::c_uint = 16;
pub const INT8_MAX: ::std::os::raw::c_uint = 127;
pub const INT16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const INT8_MIN: ::std::os::raw::c_int = -128;
pub const INT16_MIN: ::std::os::raw::c_int = -32768;
pub const INT32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const UINT8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT64_MAX: ::std::os::raw::c_int = -1;
pub const INT_LEAST8_MIN: ::std::os::raw::c_int = -128;
pub const INT_LEAST16_MIN: ::std::os::raw::c_int = -32768;
pub const INT_LEAST32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT_LEAST64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INT_LEAST8_MAX: ::std::os::raw::c_uint = 127;
pub const INT_LEAST16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT_LEAST32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT_LEAST64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINT_LEAST8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT_LEAST16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT_LEAST32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT_LEAST64_MAX: ::std::os::raw::c_int = -1;
pub const INT_FAST8_MIN: ::std::os::raw::c_int = -128;
pub const INT_FAST16_MIN: ::std::os::raw::c_int = -32768;
pub const INT_FAST32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT_FAST64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INT_FAST8_MAX: ::std::os::raw::c_uint = 127;
pub const INT_FAST16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT_FAST32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT_FAST64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINT_FAST8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT_FAST16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT_FAST32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT_FAST64_MAX: ::std::os::raw::c_int = -1;
pub const INTPTR_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INTPTR_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINTPTR_MAX: ::std::os::raw::c_int = -1;
pub const INTMAX_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INTMAX_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINTMAX_MAX: ::std::os::raw::c_int = -1;
pub const PTRDIFF_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const PTRDIFF_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const SIZE_MAX: ::std::os::raw::c_int = -1;
pub const RSIZE_MAX: ::std::os::raw::c_int = -1;
pub const WINT_MIN: ::std::os::raw::c_int = -2147483648;
pub const WINT_MAX: ::std::os::raw::c_uint = 2147483647;
pub const SIG_ATOMIC_MIN: ::std::os::raw::c_int = -2147483648;
pub const SIG_ATOMIC_MAX: ::std::os::raw::c_uint = 2147483647;
pub type va_list = __builtin_va_list;
pub type __gnuc_va_list = __builtin_va_list;
pub type wchar_t = ::std::os::raw::c_int;
pub type max_align_t = f64;
pub type int_least8_t = i8;
pub type int_least16_t = i16;
pub type int_least32_t = i32;
pub type int_least64_t = i64;
pub type uint_least8_t = u8;
pub type uint_least16_t = u16;
pub type uint_least32_t = u32;
pub type uint_least64_t = u64;
pub type int_fast8_t = i8;
pub type int_fast16_t = i16;
pub type int_fast32_t = i32;
pub type int_fast64_t = i64;
pub type uint_fast8_t = u8;
pub type uint_fast16_t = u16;
pub type uint_fast32_t = u32;
pub type uint_fast64_t = u64;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __darwin_intptr_t = ::std::os::raw::c_long;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_ct_rune_t = ::std::os::raw::c_int;
#[repr(C)]
pub union __mbstate_t {
    pub __mbstate8: [::std::os::raw::c_char; 128usize],
    pub _mbstateL: ::std::os::raw::c_longlong,
}
pub type __darwin_mbstate_t = __mbstate_t;
pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;
pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type __darwin_va_list = __builtin_va_list;
pub type __darwin_wchar_t = ::std::os::raw::c_int;
pub type __darwin_rune_t = __darwin_wchar_t;
pub type __darwin_wint_t = ::std::os::raw::c_int;
pub type __darwin_clock_t = ::std::os::raw::c_ulong;
pub type __darwin_socklen_t = __uint32_t;
pub type __darwin_ssize_t = ::std::os::raw::c_long;
pub type __darwin_time_t = ::std::os::raw::c_long;
pub type __darwin_blkcnt_t = __int64_t;
pub type __darwin_blksize_t = __int32_t;
pub type __darwin_dev_t = __int32_t;
pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;
pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_id_t = __uint32_t;
pub type __darwin_ino64_t = __uint64_t;
pub type __darwin_ino_t = __darwin_ino64_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_mode_t = __uint16_t;
pub type __darwin_off_t = __int64_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_sigset_t = __uint32_t;
pub type __darwin_suseconds_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_useconds_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];
#[repr(C)]
#[derive(Copy)]
pub struct __darwin_pthread_handler_rec {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __next: *mut __darwin_pthread_handler_rec,
}
impl Clone for __darwin_pthread_handler_rec {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
pub struct _opaque_pthread_attr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[repr(C)]
pub struct _opaque_pthread_cond_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 40usize],
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_condattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
impl Clone for _opaque_pthread_condattr_t {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
pub struct _opaque_pthread_mutex_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_mutexattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
impl Clone for _opaque_pthread_mutexattr_t {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_once_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
impl Clone for _opaque_pthread_once_t {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
pub struct _opaque_pthread_rwlock_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 192usize],
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_rwlockattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 16usize],
}
impl Clone for _opaque_pthread_rwlockattr_t {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
pub struct _opaque_pthread_t {
    pub __sig: ::std::os::raw::c_long,
    pub __cleanup_stack: *mut __darwin_pthread_handler_rec,
    pub __opaque: [::std::os::raw::c_char; 8176usize],
}
pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;
pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;
pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;
pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;
pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;
pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;
pub type __darwin_pthread_once_t = _opaque_pthread_once_t;
pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;
pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;
pub type __darwin_pthread_t = *mut _opaque_pthread_t;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_column_family_descriptor_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_column_family_handle_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_db_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_column_family_options_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_dbpath_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_dboptions_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_options_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_readoptions_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_writeoptions_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_flushoptions_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_compactionoptions_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_compactrangeoptions_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_ingestexternalfileoptions_t([u8; 0]);
#[repr(C)]
#[derive(Copy)]
pub struct rocks_status_t {
    pub code: ::std::os::raw::c_int,
    pub sub_code: ::std::os::raw::c_int,
    pub state: *const ::std::os::raw::c_char,
}
impl Clone for rocks_status_t {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_ratelimiter_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_envoptions_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_logger_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_env_t([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocks_snapshot_t([u8; 0]);
extern "C" {
    pub fn rocks_options_create() -> *mut rocks_options_t;
}
extern "C" {
    pub fn rocks_options_destroy(options: *mut rocks_options_t);
}
extern "C" {
    pub fn rocks_options_set_create_if_missing(opt: *mut rocks_options_t,
                                               v: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn rocks_column_family_options_create()
     -> *mut rocks_column_family_options_t;
}
extern "C" {
    pub fn rocks_column_family_options_destroy(options:
                                                   *mut rocks_column_family_options_t);
}
extern "C" {
    pub fn rocks_options_increase_parallelism(opt: *mut rocks_options_t,
                                              total_threads:
                                                  ::std::os::raw::c_int);
}
extern "C" {
    pub fn rocks_options_optimize_for_point_lookup(opt: *mut rocks_options_t,
                                                   block_cache_size_mb: u64);
}
extern "C" {
    pub fn rocks_options_optimize_level_style_compaction(opt:
                                                             *mut rocks_options_t,
                                                         memtable_memory_budget:
                                                             u64);
}
extern "C" {
    pub fn rocks_options_optimize_universal_style_compaction(opt:
                                                                 *mut rocks_options_t,
                                                             memtable_memory_budget:
                                                                 u64);
}
extern "C" {
    pub fn rocks_readoptions_create() -> *mut rocks_readoptions_t;
}
extern "C" {
    pub fn rocks_readoptions_destroy(opt: *mut rocks_readoptions_t);
}
extern "C" {
    pub fn rocks_readoptions_set_verify_checksums(opt:
                                                      *mut rocks_readoptions_t,
                                                  v: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn rocks_readoptions_set_fill_cache(opt: *mut rocks_readoptions_t,
                                            v: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn rocks_readoptions_set_snapshot(opt: *mut rocks_readoptions_t,
                                          snap: *const rocks_snapshot_t);
}
extern "C" {
    pub fn rocks_readoptions_set_iterate_upper_bound(opt:
                                                         *mut rocks_readoptions_t,
                                                     key:
                                                         *const ::std::os::raw::c_char,
                                                     keylen: usize);
}
extern "C" {
    pub fn rocks_readoptions_set_read_tier(opt: *mut rocks_readoptions_t,
                                           v: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rocks_readoptions_set_tailing(opt: *mut rocks_readoptions_t,
                                         v: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn rocks_readoptions_set_readahead_size(opt: *mut rocks_readoptions_t,
                                                v: usize);
}
extern "C" {
    pub fn rocks_readoptions_set_pin_data(opt: *mut rocks_readoptions_t,
                                          v: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn rocks_readoptions_set_total_order_seek(opt:
                                                      *mut rocks_readoptions_t,
                                                  v: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn rocks_writeoptions_create() -> *mut rocks_writeoptions_t;
}
extern "C" {
    pub fn rocks_writeoptions_destroy(opt: *mut rocks_writeoptions_t);
}
extern "C" {
    pub fn rocks_writeoptions_set_sync(opt: *mut rocks_writeoptions_t,
                                       v: ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn rocks_writeoptions_disable_WAL(opt: *mut rocks_writeoptions_t,
                                          disable: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rocks_create_logger_from_options(path:
                                                *const ::std::os::raw::c_char,
                                            opts: *mut rocks_options_t,
                                            status: *mut rocks_status_t)
     -> *mut rocks_logger_t;
}
extern "C" {
    pub fn rocks_db_open(options: *const rocks_options_t,
                         name: *const ::std::os::raw::c_char,
                         status: *mut rocks_status_t) -> *mut rocks_db_t;
}
extern "C" {
    pub fn rocks_db_close(db: *mut rocks_db_t);
}
extern "C" {
    pub fn rocks_db_open_for_read_only(options: *const rocks_options_t,
                                       name: *const ::std::os::raw::c_char,
                                       error_if_log_file_exist:
                                           ::std::os::raw::c_uchar,
                                       status: *mut rocks_status_t)
     -> *mut rocks_db_t;
}
extern "C" {
    pub fn rocks_db_list_column_families(options: *const rocks_options_t,
                                         name: *const ::std::os::raw::c_char,
                                         lencfs: *mut usize,
                                         status: *mut rocks_status_t)
     -> *mut *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rocks_db_list_column_families_destroy(list:
                                                     *mut *mut ::std::os::raw::c_char,
                                                 len: usize);
}
extern "C" {
    pub fn rocks_db_create_column_family(db: *mut rocks_db_t,
                                         column_family_options:
                                             *const rocks_options_t,
                                         column_family_name:
                                             *const ::std::os::raw::c_char,
                                         status: *mut rocks_status_t)
     -> *mut rocks_column_family_handle_t;
}
extern "C" {
    pub fn rocks_db_drop_column_family(db: *mut rocks_db_t,
                                       handle:
                                           *mut rocks_column_family_handle_t,
                                       status: *mut rocks_status_t);
}
extern "C" {
    pub fn rocks_db_column_family_handle_destroy(handle:
                                                     *mut rocks_column_family_handle_t);
}
extern "C" {
    pub fn rocks_db_put(db: *mut rocks_db_t,
                        options: *const rocks_writeoptions_t,
                        key: *const ::std::os::raw::c_char, keylen: usize,
                        val: *const ::std::os::raw::c_char, vallen: usize,
                        status: *mut rocks_status_t);
}
extern "C" {
    pub fn rocks_db_put_cf(db: *mut rocks_db_t,
                           options: *const rocks_writeoptions_t,
                           column_family: *mut rocks_column_family_handle_t,
                           key: *const ::std::os::raw::c_char, keylen: usize,
                           val: *const ::std::os::raw::c_char, vallen: usize,
                           status: *mut rocks_status_t);
}
extern "C" {
    pub fn rocks_db_delete(db: *mut rocks_db_t,
                           options: *const rocks_writeoptions_t,
                           key: *const ::std::os::raw::c_char, keylen: usize,
                           status: *mut rocks_status_t);
}
extern "C" {
    pub fn rocks_db_delete_cf(db: *mut rocks_db_t,
                              options: *const rocks_writeoptions_t,
                              column_family:
                                  *mut rocks_column_family_handle_t,
                              key: *const ::std::os::raw::c_char,
                              keylen: usize, status: *mut rocks_status_t);
}
extern "C" {
    pub fn rocks_db_get(db: *mut rocks_db_t,
                        options: *const rocks_readoptions_t,
                        key: *const ::std::os::raw::c_char, keylen: usize,
                        vallen: *mut usize, status: *mut rocks_status_t)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rocks_db_get_cf(db: *mut rocks_db_t,
                           options: *const rocks_readoptions_t,
                           column_family: *mut rocks_column_family_handle_t,
                           key: *const ::std::os::raw::c_char, keylen: usize,
                           vallen: *mut usize, status: *mut rocks_status_t)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rocks_destroy_db(options: *const rocks_options_t,
                            name: *const ::std::os::raw::c_char,
                            status: *mut rocks_status_t);
}
extern "C" {
    pub fn rocks_repair_db(options: *const rocks_options_t,
                           name: *const ::std::os::raw::c_char,
                           status: *mut rocks_status_t);
}
extern "C" {
    pub fn rocks_ratelimiter_create(rate_bytes_per_sec: i64,
                                    refill_period_us: i64, fairness: i32)
     -> *mut rocks_ratelimiter_t;
}
extern "C" {
    pub fn rocks_ratelimiter_destroy(limiter: *mut rocks_ratelimiter_t);
}
extern "C" {
    pub fn rocks_create_default_env() -> *mut rocks_env_t;
}
extern "C" {
    pub fn rocks_create_mem_env() -> *mut rocks_env_t;
}
extern "C" {
    pub fn rocks_env_set_background_threads(env: *mut rocks_env_t,
                                            n: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rocks_env_set_high_priority_background_threads(env:
                                                              *mut rocks_env_t,
                                                          n:
                                                              ::std::os::raw::c_int);
}
extern "C" {
    pub fn rocks_env_join_all_threads(env: *mut rocks_env_t);
}
extern "C" {
    pub fn rocks_env_destroy(env: *mut rocks_env_t);
}
extern "C" {
    pub fn rocks_envoptions_create() -> *mut rocks_envoptions_t;
}
extern "C" {
    pub fn rocks_envoptions_destroy(opt: *mut rocks_envoptions_t);
}
extern "C" {
    pub fn rocks_logger_destroy(logger: *mut rocks_logger_t);
}
extern "C" {
    pub fn rocks_create_snapshot(db: *mut rocks_db_t)
     -> *const rocks_snapshot_t;
}
extern "C" {
    pub fn rocks_release_snapshot(db: *mut rocks_db_t,
                                  snapshot: *const rocks_snapshot_t);
}
#[repr(C)]
#[derive(Copy)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
impl Clone for __va_list_tag {
    fn clone(&self) -> Self { *self }
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
